apiVersion: v1
kind: Namespace
metadata:
  name: prj-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prj-nginx
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: public.ecr.aws/a6y9d2q4/nginx:v1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    run: nginx
  namespace: prj-nginx
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/target-type: instance
    service.beta.kubernetes.io/subnets: subnet-0dea5ad6805572e98, subnet-03b120b5cbe448ee2
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:ap-northeast-2:039612866806:certificate/0652b45d-47d7-457d-8ce1-fb7cd60ede37
spec:
  selector:
    app: nginx
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30011
  - name: https
    protocol: TCP
    port: 443
    targetPort: 80
    nodePort: 30012
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: prj-nginx
data:
  default.conf: |
    server {
      listen 80;
      server_name localhost;

      location / {
        proxy_pass http://tomcat-service.prj-tomcat:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
      }

      location /healthcheck {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
      }

      error_page  500 502 503 504 /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
  namespace: prj-nginx
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-deployment
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 50